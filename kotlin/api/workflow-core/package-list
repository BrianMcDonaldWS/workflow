$dokka.format:gfm
$dokka.linkExtension:md
$dokka.location:com.squareup.workflow$asWorker(kotlinx.coroutines.Deferred((com.squareup.workflow.asWorker.OutputT)))com.squareup.workflow/kotlinx.coroutines.-deferred/as-worker.md
$dokka.location:com.squareup.workflow$asWorker(kotlinx.coroutines.channels.BroadcastChannel((com.squareup.workflow.asWorker.OutputT)))com.squareup.workflow/kotlinx.coroutines.channels.-broadcast-channel/as-worker.md
$dokka.location:com.squareup.workflow$asWorker(kotlinx.coroutines.channels.ReceiveChannel((com.squareup.workflow.asWorker.OutputT)), kotlin.Boolean)com.squareup.workflow/kotlinx.coroutines.channels.-receive-channel/as-worker.md
$dokka.location:com.squareup.workflow$asWorker(kotlinx.coroutines.flow.Flow((com.squareup.workflow.asWorker.OutputT)))com.squareup.workflow/kotlinx.coroutines.flow.-flow/as-worker.md
$dokka.location:com.squareup.workflow$parse(okio.ByteString, kotlin.Function1((okio.BufferedSource, com.squareup.workflow.parse.T)))com.squareup.workflow/okio.-byte-string/parse.md
$dokka.location:com.squareup.workflow$readBooleanFromInt(okio.BufferedSource)com.squareup.workflow/okio.-buffered-source/read-boolean-from-int.md
$dokka.location:com.squareup.workflow$readByteStringWithLength(okio.BufferedSource)com.squareup.workflow/okio.-buffered-source/read-byte-string-with-length.md
$dokka.location:com.squareup.workflow$readEnumByOrdinal(okio.BufferedSource)com.squareup.workflow/okio.-buffered-source/read-enum-by-ordinal.md
$dokka.location:com.squareup.workflow$readFloat(okio.BufferedSource)com.squareup.workflow/okio.-buffered-source/read-float.md
$dokka.location:com.squareup.workflow$readList(okio.BufferedSource, kotlin.Function1((okio.BufferedSource, com.squareup.workflow.readList.T)))com.squareup.workflow/okio.-buffered-source/read-list.md
$dokka.location:com.squareup.workflow$readNullable(okio.BufferedSource, kotlin.Function1((okio.BufferedSource, com.squareup.workflow.readNullable.T)))com.squareup.workflow/okio.-buffered-source/read-nullable.md
$dokka.location:com.squareup.workflow$readOptionalEnumByOrdinal(okio.BufferedSource)com.squareup.workflow/okio.-buffered-source/read-optional-enum-by-ordinal.md
$dokka.location:com.squareup.workflow$readOptionalUtf8WithLength(okio.BufferedSource)com.squareup.workflow/okio.-buffered-source/read-optional-utf8-with-length.md
$dokka.location:com.squareup.workflow$readUtf8WithLength(okio.BufferedSource)com.squareup.workflow/okio.-buffered-source/read-utf8-with-length.md
$dokka.location:com.squareup.workflow$writeBooleanAsInt(okio.BufferedSink, kotlin.Boolean)com.squareup.workflow/okio.-buffered-sink/write-boolean-as-int.md
$dokka.location:com.squareup.workflow$writeByteStringWithLength(okio.BufferedSink, okio.ByteString)com.squareup.workflow/okio.-buffered-sink/write-byte-string-with-length.md
$dokka.location:com.squareup.workflow$writeEnumByOrdinal(okio.BufferedSink, com.squareup.workflow.writeEnumByOrdinal.T)com.squareup.workflow/okio.-buffered-sink/write-enum-by-ordinal.md
$dokka.location:com.squareup.workflow$writeFloat(okio.BufferedSink, kotlin.Float)com.squareup.workflow/okio.-buffered-sink/write-float.md
$dokka.location:com.squareup.workflow$writeList(okio.BufferedSink, kotlin.collections.List((com.squareup.workflow.writeList.T)), kotlin.Function2((okio.BufferedSink, com.squareup.workflow.writeList.T, kotlin.Unit)))com.squareup.workflow/okio.-buffered-sink/write-list.md
$dokka.location:com.squareup.workflow$writeNullable(okio.BufferedSink, com.squareup.workflow.writeNullable.T, kotlin.Function2((okio.BufferedSink, com.squareup.workflow.writeNullable.T, kotlin.Unit)))com.squareup.workflow/okio.-buffered-sink/write-nullable.md
$dokka.location:com.squareup.workflow$writeOptionalEnumByOrdinal(okio.BufferedSink, com.squareup.workflow.writeOptionalEnumByOrdinal.T)com.squareup.workflow/okio.-buffered-sink/write-optional-enum-by-ordinal.md
$dokka.location:com.squareup.workflow$writeOptionalUtf8WithLength(okio.BufferedSink, kotlin.String)com.squareup.workflow/okio.-buffered-sink/write-optional-utf8-with-length.md
$dokka.location:com.squareup.workflow$writeUtf8WithLength(okio.BufferedSink, kotlin.String)com.squareup.workflow/okio.-buffered-sink/write-utf8-with-length.md
com.squareup.workflow
